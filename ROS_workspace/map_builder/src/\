#!/usr/bin/env python
import roslib; roslib.load_manifest('map_builder')
import rospy
from nav_msgs.msg import OccupancyGrid
import sys

class mapPublisher:
    def __init__(self):
	rospy.init_node("map_publisher")
	#print "Node initiated"
	self.pub = rospy.Publisher("map", OccupancyGrid)
	#print "publisher created"
	self.initGrid()
	self.grid = occupancyGrid()

    def initGrid(self):
	self.occupancy_grid = []
	i = 0
	for i in range(398 * 798):
	    self.occupancy_grid.append(0)
	self.grid.data = self.occupancy_grid
	self.grid.info.resolution = 0.01
	self.grid.info.width = 398
	self.grid.info.height = 798
	self.grid.info.origin.position = [0,0,0]
	self.grid.info.origin.orientation = [0,0,1]
	self.grid.header.frame_id = "/map"

    def run(self):
	frequency = rospy.Rate(10)
	while not rospy.is_shutdown():
	    self.initGrid()
	    self.pub.publish(self.grid)
	    print "Occupancy Grid sent"
	    frequency.sleep()

class occupancyGrid:
    def __init__(self):
	self.header = header()
	self.info = info()
	self.data = []

class header:
    def __init__(self):
	self.seq = 123467
	self.stamp = None
	self.frame_id = ""

class info:
    def __init__(self):
	self.map_load_time = None
	self.resolution = 0.0
	self.width = 0
	self.height = 0
	self.origin = origin()

class origin:
    def __init__(self):
	self.position = []
	self.orientation = []


if __name__ == '__main__':
    print "Program Started"
    try:
	mapPub = mapPublisher()
	#print "Object created"
	mapPub.run()
	print "shutDown!"
	print rospy.is_shutdown()
    except KeyboardInterrupt:
	sys.exit(0)
